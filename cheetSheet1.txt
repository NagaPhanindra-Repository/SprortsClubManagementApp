
############cardUserTransactions.java


private long cardNumber;
	private String CreditedTo;
	@DateTimeFormat(pattern = "dd/MM/yyyy h:mm a")
	private Date TransactionTime;
	
	private String Amount;
	
	private String Currency;
	
	public cardUserTransactions(long cardNumber,String CreditedTo, Date date, String Amount, String currency) {
		this.CreditedTo=CreditedTo;
		this.TransactionTime=date;
		this.Amount=Amount;
		this.Currency=currency;
		this.cardNumber=cardNumber;
	}

	
	
	
	public long getCardNumber() {
		return cardNumber;
	}




	public void setCardNumber(long cardNumber) {
		this.cardNumber = cardNumber;
	}




	public String getCreditedTo() {
		return CreditedTo;
	}




	public void setCreditedTo(String creditedTo) {
		CreditedTo = creditedTo;
	}



	@DateTimeFormat(pattern = "dd/MM/yyyy h:mm a")
	public Date getTransactionTime() {
		return TransactionTime;
	}




	public void setTransactionTime(Date transactionTime) {
		TransactionTime = transactionTime;
	}




	public String getAmount() {
		return Amount;
	}




	public void setAmount(String amount) {
		Amount = amount;
	}




	public String getCurrency() {
		return Currency;
	}




	public void setCurrency(String currency) {
		Currency = currency;
	}




	@Override
	public String toString() {
		return "cardUserTransactions [cardNumber=" + cardNumber + ", CreditedTo=" + CreditedTo + ", TransactionTime="
				+ TransactionTime + ", Amount=" + Amount + ", Currency=" + Currency + "]";
	}











#########################UserTransactionService




Stream<cardUserTransactions> stream=Stream.of(new cardUserTransactions(8978787829l,"CCD",new Date("07/07/2020 10:20 AM"),"200.00","EUR"),
		new cardUserTransactions(8978787829l,"CCD",new Date("07/08/2020 09:20 PM"),"34.00","EUR"),
		new cardUserTransactions(8978787829l,"starBucks",new Date("07/09/2020 09:20 PM"),"100.00","EUR"),
		new cardUserTransactions(8978787829l,"Walmart",new Date("07/01/2020 09:20 PM"),"800.00","EUR"),
		new cardUserTransactions(8978787829l,"walgreens",new Date("07/02/2020 09:20 PM"),"4.00","EUR"),	
		new cardUserTransactions(8978787829l,"apple",new Date("07/03/2020 09:20 PM"),"340.00","EUR"),
		new cardUserTransactions(8978787829l,"bestbuy",new Date("07/04/2020 09:20 PM"),"10.00","EUR"),
		new cardUserTransactions(8978787829l,"walmart",new Date("07/05/2020 09:20 PM"),"90.00","EUR"),
		new cardUserTransactions(8978787829l,"fedex",new Date("07/06/2020 09:20 PM"),"700.00","EUR"),
		
		    new cardUserTransactions(8978787829l,"CCD",new Date("08/07/2020 09:20 PM"),"300.00","EUR"),
			new cardUserTransactions(8978787829l,"CCD",new Date("09/07/2020 09:20 PM"),"300.00","EUR"),
			new cardUserTransactions(8978787829l,"CCD",new Date("06/07/2020 09:20 PM"),"300.00","EUR"),
			new cardUserTransactions(8978787829l,"CCD",new Date("05/07/2020 09:20 PM"),"300.00","EUR"),
			
			
			new cardUserTransactions(8978787829l,"CCD",new Date("06/01/2020 09:20 PM"),"300.00","EUR"),
			new cardUserTransactions(8978787829l,"CCD",new Date("06/02/2020 09:20 PM"),"300.00","EUR"),
			new cardUserTransactions(8978787829l,"CCD",new Date("06/03/2020 09:20 PM"),"300.00","EUR"),
			new cardUserTransactions(8978787829l,"CCD",new Date("06/04/2020 09:20 PM"),"300.00","EUR"),
			new cardUserTransactions(8978787829l,"CCD",new Date("06/05/2020 09:20 PM"),"300.00","EUR"),
			new cardUserTransactions(8978787829l,"CCD",new Date("06/06/2020 09:20 PM"),"300.00","EUR"),
			new cardUserTransactions(8978787829l,"CCD",new Date("06/07/2020 09:20 PM"),"300.00","EUR"),
			new cardUserTransactions(8978787829l,"CCD",new Date("06/08/2020 09:20 PM"),"300.00","EUR"),
			new cardUserTransactions(8978787829l,"CCD",new Date("06/09/2020 09:20 PM"),"300.00","EUR"),
			new cardUserTransactions(8978787829l,"CCD",new Date("06/10/2020 09:20 PM"),"300.00","EUR"),
			new cardUserTransactions(8978787829l,"CCD",new Date("06/11/2020 09:20 PM"),"300.00","EUR"),
			new cardUserTransactions(8978787829l,"CCD",new Date("06/12/2020 09:20 PM"),"300.00","EUR"),
			new cardUserTransactions(8978787829l,"CCD",new Date("06/13/2020 09:20 PM"),"300.00","EUR"),
			new cardUserTransactions(8978787829l,"CCD",new Date("06/14/2020 09:20 PM"),"300.00","EUR"),
			new cardUserTransactions(8978787829l,"CCD",new Date("06/15/2020 09:20 PM"),"300.00","EUR"),
			new cardUserTransactions(8978787829l,"CCD",new Date("06/16/2020 09:20 PM"),"300.00","EUR"),
			new cardUserTransactions(8978787829l,"CCD",new Date("06/17/2020 09:20 PM"),"300.00","EUR"),
			new cardUserTransactions(8978787829l,"CCD",new Date("06/18/2020 09:20 PM"),"300.00","EUR"),
			new cardUserTransactions(8978787829l,"CCD",new Date("06/19/2020 09:20 PM"),"300.00","EUR"),
			new cardUserTransactions(8978787829l,"CCD",new Date("06/20/2020 09:20 PM"),"300.00","EUR"),
			new cardUserTransactions(8978787829l,"CCD",new Date("06/21/2020 09:20 PM"),"300.00","EUR"),
			new cardUserTransactions(8978787829l,"CCD",new Date("06/22/2020 09:20 PM"),"300.00","EUR"),
			new cardUserTransactions(8978787829l,"CCD",new Date("06/23/2020 09:20 PM"),"300.00","EUR"),
			new cardUserTransactions(8978787829l,"CCD",new Date("06/24/2020 09:20 PM"),"300.00","EUR"),
			new cardUserTransactions(8978787829l,"CCD",new Date("06/25/2020 09:20 PM"),"300.00","EUR"),
			new cardUserTransactions(8978787829l,"CCD",new Date("06/26/2020 09:20 PM"),"300.00","EUR"),
			new cardUserTransactions(8978787829l,"CCD",new Date("06/27/2020 09:20 PM"),"300.00","EUR"),
			new cardUserTransactions(8978787829l,"CCD",new Date("06/28/2020 09:20 PM"),"300.00","EUR"),
			new cardUserTransactions(8978787829l,"CCD",new Date("06/29/2020 09:20 PM"),"300.00","EUR"),
			new cardUserTransactions(8978787829l,"CCD",new Date("06/30/2020 09:20 PM"),"300.00","EUR"),
			new cardUserTransactions(8978787829l,"CCD",new Date("04/01/2020 09:20 PM"),"300.00","EUR"),
			new cardUserTransactions(8978787829l,"CCD",new Date("04/02/2020 09:20 PM"),"300.00","EUR"),
			new cardUserTransactions(8978787829l,"CCD",new Date("04/03/2020 09:20 PM"),"300.00","EUR"),
			new cardUserTransactions(8978787829l,"CCD",new Date("04/04/2020 09:20 PM"),"300.00","EUR"),
			new cardUserTransactions(8978787829l,"CCD",new Date("04/05/2020 09:20 PM"),"300.00","EUR"),
			new cardUserTransactions(8978787829l,"CCD",new Date("04/06/2020 09:20 PM"),"300.00","EUR"),
			new cardUserTransactions(8978787829l,"CCD",new Date("04/07/2020 09:20 PM"),"300.00","EUR"),
			new cardUserTransactions(8978787829l,"CCD",new Date("04/08/2020 09:20 PM"),"300.00","EUR"),
			new cardUserTransactions(8978787829l,"CCD",new Date("04/09/2020 09:20 PM"),"300.00","EUR"),
			new cardUserTransactions(8978787829l,"CCD",new Date("04/10/2020 09:20 PM"),"300.00","EUR"),
			new cardUserTransactions(8978787829l,"CCD",new Date("11/07/2019 09:20 PM"),"300.00","EUR"),
			new cardUserTransactions(8978787829l,"CCD",new Date("08/07/2019 09:20 PM"),"300.00","EUR"),
			new cardUserTransactions(8978787829l,"CCD",new Date("04/07/2019 09:20 PM"),"300.00","EUR"),
			new cardUserTransactions(8978787829l,"CCD",new Date("08/09/2019 09:20 PM"),"300.00","EUR"),
			new cardUserTransactions(8978787829l,"CCD",new Date("01/04/2019 09:20 PM"),"300.00","EUR"),
			new cardUserTransactions(8978787829l,"CCD",new Date("03/07/2019 09:20 PM"),"300.00","EUR"),
			new cardUserTransactions(8978787829l,"CCD",new Date("09/07/2019 09:20 PM"),"300.00","EUR")
			);
	




List<cardUserTransactions> Slist=stream.collect(Collectors.toList());
	
        public List<cardUserTransactions> getAllTransactions(){
	    return Slist;
	
        }


	public List<cardUserTransactions> getLastFiftyTransactions(){
		List<cardUserTransactions> Slist2=Slist.stream().sorted(Comparator.comparing(cardUserTransactions::getTransactionTime).reversed()).collect(Collectors.toList());
		List<cardUserTransactions> myLast50Transactions = Slist2.stream().limit(50).collect(Collectors.toList());
		//List<cardUserTransactions> myLast50Transactions = Slist2.subList(Slist2.size()-Math.min(Slist2.size(),50), Slist2.size());
		//return Slist2;
		
		return myLast50Transactions;
		
	}
	
	public  List<cardUserTransactions> getCurrentTransactions() {
		
		 LocalDate currentDate = LocalDate.now();
		    int month=currentDate.getMonthValue();
		List<cardUserTransactions> CurrentTransactionWithoutSort =Slist.stream()
        .filter(cardUserTransactions -> cardUserTransactions.getTransactionTime().getMonth()==month-1).collect(Collectors.toList());
		
		
		List<cardUserTransactions> myCurrentTransactions=CurrentTransactionWithoutSort.stream().sorted(Comparator.comparing(cardUserTransactions::getTransactionTime).reversed()).collect(Collectors.toList());
		
		
		return myCurrentTransactions;
        
		
	}
	
	





#######################UserLoginController

 UserTransactionService userService=new UserTransactionService();
	   
	    @GetMapping("/LastFiftyTransactions")		   
	    public List<cardUserTransactions> getTransactions() {
	    	
	    	
	    	return   userService.getLastFiftyTransactions();
	    }
	    
	    @GetMapping("/Transactions")		   
	    public List<cardUserTransactions> getTransactionsd() {
	    	
	    	
	    	return   userService.getAllTransactions();
	    }
	    
	    @GetMapping("/CurrentTransactions")		   
	    public List<cardUserTransactions> getCurrentTransactions() {
	    	
	    	
	    	return   userService.getCurrentTransactions();
	    }
	
	
	